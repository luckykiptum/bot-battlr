{"ast":null,"code":"var _jsxFileName = \"/home/lucky/Development/phase2/bot-battlr/bot-battlr/src/Components/BotCollection.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport \"./BotCollection.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BotCollection({\n  enlistBot,\n  showBotSpecs,\n  enlistedBots\n}) {\n  _s();\n  const [bots, setBots] = useState([]);\n  useEffect(() => {\n    fetch(\"https://json-server-1-i1ye.onrender.com/bots\").then(response => response.json()).then(data => setBots(data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Bot \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Collection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bot-card-container\",\n      children: bots.map(bot => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `bot-card ${enlistedBots.some(b => b.id === bot.id) ? 'enlisted' : ''}`,\n        onClick: () => showBotSpecs(bot),\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: bot.avatar_url,\n          alt: bot.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: bot.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Health: \", bot.health]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Damage: \", bot.damage]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Armor: \", bot.armor]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Class: \", bot.bot_class]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this), enlistedBots.some(b => b.id === bot.id) ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"enlisted-message\",\n          children: \"Enlisted\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => enlistBot(bot),\n          children: \"Enlist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }, this)]\n      }, bot.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_s(BotCollection, \"HLWYdwhjlsHzdjlYtqtFyxxPKrE=\");\n_c = BotCollection;\nexport default BotCollection;\nvar _c;\n$RefreshReg$(_c, \"BotCollection\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","BotCollection","enlistBot","showBotSpecs","enlistedBots","_s","bots","setBots","fetch","then","response","json","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","bot","some","b","id","onClick","src","avatar_url","alt","name","health","damage","armor","bot_class","_c","$RefreshReg$"],"sources":["/home/lucky/Development/phase2/bot-battlr/bot-battlr/src/Components/BotCollection.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport \"./BotCollection.css\";\n\nfunction BotCollection({ enlistBot,showBotSpecs, enlistedBots }) {\n  const [bots, setBots] = useState([]);\n\n  useEffect(() => {\n    fetch(\"https://json-server-1-i1ye.onrender.com/bots\")\n      .then(response => response.json())\n      .then(data => setBots(data));\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <h2>Bot <span>Collection</span></h2>\n      <div className=\"bot-card-container\">\n        {bots.map(bot => (\n          <div className={`bot-card ${enlistedBots.some(b => b.id === bot.id) ? 'enlisted' : ''}`} key={bot.id} \n          onClick={() => showBotSpecs(bot)}>\n            <img src={bot.avatar_url} alt={bot.name} />\n            <h3>{bot.name}</h3>\n            <p>Health: {bot.health}</p>\n            <p>Damage: {bot.damage}</p>\n            <p>Armor: {bot.armor}</p>\n            <p>Class: {bot.bot_class}</p>\n            {/* <p>Catchphrase: {bot.catchphrase}</p> */}\n            {enlistedBots.some(b => b.id === bot.id) ? (\n              <p className=\"enlisted-message\">Enlisted</p>\n            ) : (\n              <button onClick={() => enlistBot(bot)}>Enlist</button>\n            )}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default BotCollection;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}